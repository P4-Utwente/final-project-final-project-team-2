using pylint code style is reviewed with results:
 ************* Module thefuck.rules.ag_literal
thefuck/rules/ag_literal.py:1:0: C0114: Missing module docstring (missing-module-docstring)
thefuck/rules/ag_literal.py:5:0: C0116: Missing function or method docstring (missing-function-docstring)
thefuck/rules/ag_literal.py:9:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module thefuck.rules.apt_get
thefuck/rules/apt_get.py:1:0: C0114: Missing module docstring (missing-module-docstring)
thefuck/rules/apt_get.py:18:4: C0103: Constant name "enabled_by_default" doesn't conform to UPPER_CASE naming style (invalid-name)
thefuck/rules/apt_get.py:22:4: R1705: Unnecessary "else" after "return" (no-else-return)
thefuck/rules/apt_get.py:29:0: C0116: Missing function or method docstring (missing-function-docstring)
thefuck/rules/apt_get.py:38:0: C0116: Missing function or method docstring (missing-function-docstring)
thefuck/rules/apt_get.py:39:4: R1705: Unnecessary "else" after "return" (no-else-return)
thefuck/rules/apt_get.py:46:0: C0116: Missing function or method docstring (missing-function-docstring)

-----------------------------------
Your code has been rated at 7.30/10

All these errors/warning are fixed with changing the constant name being one point

----------------------------------------------------------------------------------------------------------------------------------------------
Running bandit resulted in a lot of low risk, 10 medium risk and 1 high risk vulnerabilites.
It was decided to fix the high risk vulnerability.
this was:
--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   Location: thefuck-master/thefuck/output_readers/rerun.py:60
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html
59                  script, env, is_slow)):
60              result = Popen(expanded, shell=True, stdin=PIPE,
61                             stdout=PIPE, stderr=STDOUT, env=env)
62              if _wait_output(result, is_slow):

----------------------------------------------------------------------------------------------------------------------------------------------

a test is written for the cargo.py file

----------------------------------------------------------------------------------------------------------------------------------------------

a new rule with acompanying test is written 
cd_prev.py

----------------------------------------------------------------------------------------------------------------------------------------------

a new rule with acompanying test is written 
gcloud_auth.py

-----------------------------------------------------------------------------------------------------------------------------------------------

the continuous integration workflow is extended to include Pylint
a continuous deployment workflow is written


